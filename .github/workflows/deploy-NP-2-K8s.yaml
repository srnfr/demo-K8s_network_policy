# This workfow shows how to build a Docker image, tag and push it to DigitalOcean Container Registry, and
# deploy the application on a DIgitalOcean Kubernetes cluster. For description to the entire worklow, 
# see www.digitalocean.com/docs/kubernetes/how-to/deploy-using-github-actions.

name: Deploy Network Policies

# Controls when the action will run.
on:
  # Triggers the workflow on push request on the main branch for changes in the specified paths.
  push:
    branches:
      - main
    paths:
      ##- 'config/**'
      - 'target/04-networkpolicy.yaml'
      - 'players/*/*-networkpolicy.yaml'
      ##- 'server.py'
      ##- 'Dockerfile'
      ##- '.github/workflows/**'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel.
jobs:
  # This workflow contains a single job called "build".
  deployNP:
    # The type of runner that the job will run on.
    runs-on: ubuntu-latest
    
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:

    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it.
    - name: Checkout master
      uses: actions/checkout@main

    # Install doctl.
    - name: Install doctl
      uses: digitalocean/action-doctl@v2
      with:
        token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

    - name: Save DigitalOcean kubeconfig with short-lived credentials
      ##run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}
      run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 terraform-do-cluster
      
    - name: Deploy to DigitalOcean Kubernetes for target
      run: kubectl apply -f $GITHUB_WORKSPACE/target/*.yaml

    - name: Deploy to DigitalOcean Kubernetes for players
      run: kubectl apply -f $GITHUB_WORKSPACE/players/*/*.yaml
      
    - name: Verify networkpolicies
      run: kubectl get networkpolicies -A
